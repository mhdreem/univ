// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using Univ.Hi_Student_Affairs.EntityFrameworkCore;
using Volo.Abp.EntityFrameworkCore;

#nullable disable

namespace Univ.Hi_Student_Affairs.Migrations
{
    [DbContext(typeof(Hi_Student_AffairsDbContext))]
    [Migration("20240812114540_init3")]
    partial class init3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.Oracle)
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.Country.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Barcode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("CountryId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<int?>("Ord")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("PhoneCode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("AppCity", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.Country.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Barcode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<byte>("Continent")
                        .HasColumnType("NUMBER(3)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<int?>("Ord")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.ToTable("AppCountry", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdAbsence.AbsenceOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("AbsenceType")
                        .HasColumnType("NUMBER(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("Ord")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.ToTable("AppAbsenceOrder", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdAbsence.AbsenceStage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("Ord")
                        .HasColumnType("NUMBER(10)");

                    b.Property<byte>("StageState")
                        .HasColumnType("NUMBER(3)");

                    b.HasKey("Id");

                    b.ToTable("AppAbsenceStage", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdAbsence.StdAbsence", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<Guid?>("AbsenceOrderId")
                        .HasColumnType("RAW(16)");

                    b.Property<int?>("AbsenceOrderId1")
                        .HasColumnType("NUMBER(10)");

                    b.Property<byte?>("AbsenceState")
                        .HasColumnType("NUMBER(3)");

                    b.Property<string>("Agent")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("AgentDate")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("AgentNo")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("AgentSource")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Note")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Reason")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("SemesterFromId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("SemesterToId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("RAW(16)");

                    b.Property<int?>("YearFrom")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("YearTo")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("AbsenceOrderId1");

                    b.HasIndex("SemesterFromId");

                    b.HasIndex("SemesterToId");

                    b.HasIndex("StudentId");

                    b.ToTable("AppStdAbsence", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdAbsence.StdAbsenceStage", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<Guid?>("StdAbsenceId")
                        .HasColumnType("RAW(16)");

                    b.HasKey("Id");

                    b.HasIndex("StdAbsenceId");

                    b.ToTable("AppStdAbsenceStage", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdAdmission.StdAdmission", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<int>("Acceptance")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("AdmissionID")
                        .HasColumnType("NUMBER(10)");

                    b.Property<byte?>("AdmissionLanguage")
                        .HasColumnType("NUMBER(3)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("CreatorId");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("Date");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<byte?>("Language")
                        .HasColumnType("NUMBER(3)");

                    b.Property<int?>("LanguageMark")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("LastModifierId");

                    b.Property<int?>("No")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Note")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("Ord")
                        .HasColumnType("NUMBER(10)");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("RAW(16)");

                    b.Property<long?>("SubectMark")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("TotalMark")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("TotalMarkNet")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("AdmissionID");

                    b.HasIndex("StudentId");

                    b.ToTable("AppStdAdmission", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdAffiliation.AffiliationOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("AffiliationType")
                        .HasColumnType("NUMBER(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("Ord")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.ToTable("AppAffiliationOrder", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdAffiliation.AffiliationStage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("Ord")
                        .HasColumnType("NUMBER(10)");

                    b.Property<byte>("StageState")
                        .HasColumnType("NUMBER(3)");

                    b.HasKey("Id");

                    b.ToTable("AppAffiliationStage", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdAffiliation.StdAffiliation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<Guid?>("AffiliationOrderId")
                        .HasColumnType("RAW(16)");

                    b.Property<int?>("AffiliationOrderId1")
                        .HasColumnType("NUMBER(10)");

                    b.Property<byte?>("AffiliationState")
                        .HasColumnType("NUMBER(3)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Note")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("SemesterId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("RAW(16)");

                    b.Property<int?>("Year")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("AffiliationOrderId1");

                    b.HasIndex("SemesterId");

                    b.HasIndex("StudentId");

                    b.ToTable("AppStdAffiliation", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdAffiliation.StdAffiliationStage", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<Guid?>("StdAffiliationId")
                        .HasColumnType("RAW(16)");

                    b.HasKey("Id");

                    b.HasIndex("StdAffiliationId");

                    b.ToTable("AppStdAffiliationStage", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdCertificate.StdCertificate", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<int?>("CityId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<int?>("CountryId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool?>("ForeignCert")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("ForeignCertCorrect")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool?>("IsForeignCertCorrect")
                        .HasColumnType("NUMBER(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("No")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Note")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("Ord")
                        .HasColumnType("NUMBER(10)");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("RAW(16)");

                    b.Property<long?>("TotalMark")
                        .HasColumnType("NUMBER(10)");

                    b.Property<long?>("TotalNet")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("TypeLicBranchId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("TypeLicId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("Year")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("StudentId");

                    b.ToTable("AppStdCertificate", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdChangeCollage.StdChangeCollage", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("RAW(16)");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("AppStdChangeCollage", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdChangeCollage.StdChangeCollageDet", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<Guid?>("StdChangeCollageId")
                        .HasColumnType("RAW(16)");

                    b.HasKey("Id");

                    b.ToTable("AppStdChangeCollageDet", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdInstitute.StdInstitute", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("RAW(16)");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("AppStdInstitute", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdLife.StdLife", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("CreatorId");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("LastModifierId");

                    b.Property<int?>("Operation")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("Ord")
                        .HasColumnType("NUMBER(10)");

                    b.Property<Guid?>("RefrenceID")
                        .HasColumnType("RAW(16)");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("Time")
                        .HasColumnType("NVARCHAR2(48)");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("AppStdLife", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdNonSyrianUnivDet", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<Guid?>("StdNonSyrianUnivId")
                        .HasColumnType("RAW(16)");

                    b.HasKey("Id");

                    b.ToTable("AppStdNonSyrianUnivDet", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdPunishment.Deprivation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("DeprivationType")
                        .HasColumnType("NUMBER(3)");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("Number")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.ToTable("AppDeprivation", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdPunishment.Punishment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DeprivationId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("Ord")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("PunishEffect")
                        .HasColumnType("NUMBER(10)");

                    b.Property<byte>("PunishmentType")
                        .HasColumnType("NUMBER(3)");

                    b.HasKey("Id");

                    b.HasIndex("DeprivationId");

                    b.ToTable("AppPunishment", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdPunishment.PunishmentReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("Ord")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.ToTable("AppPunishmentReason", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdPunishment.PunishmentStage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("Ord")
                        .HasColumnType("NUMBER(10)");

                    b.Property<byte>("StageState")
                        .HasColumnType("NUMBER(3)");

                    b.HasKey("Id");

                    b.ToTable("AppPunishmentStage", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdPunishment.StdAbolition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("No")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("PunishmentId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Result")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("AppStdAbolition", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdPunishment.StdPunishment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<int?>("ClassId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DeletionTime");

                    b.Property<bool?>("DoublePunishment")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool?>("Fixed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Note")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool?>("Outside")
                        .HasColumnType("NUMBER(1)");

                    b.Property<int?>("PunishmentId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("PunishmentReasonId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<byte?>("PunishmentState")
                        .HasColumnType("NUMBER(3)");

                    b.Property<int?>("SemesterEndId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("SemesterId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("StdAbolitionId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("RAW(16)");

                    b.Property<int?>("Year")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("YearEnd")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("AppStdPunishment", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdPunishment.StdPunishmentStage", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("DATE");

                    b.Property<string>("No")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Note")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("PunishmentId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("PunishmentStageId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<Guid?>("StdPunishmentId")
                        .HasColumnType("RAW(16)");

                    b.HasKey("Id");

                    b.HasIndex("StdPunishmentId");

                    b.ToTable("StdPunishmentStages");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdRegistration.RegOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("Ord")
                        .HasColumnType("NUMBER(10)");

                    b.Property<byte?>("RegType")
                        .HasColumnType("NUMBER(3)");

                    b.HasKey("Id");

                    b.ToTable("AppRegOrder", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdRegistration.RegStage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("Ord")
                        .HasColumnType("NUMBER(10)");

                    b.Property<byte?>("StageState")
                        .HasColumnType("NUMBER(3)");

                    b.HasKey("Id");

                    b.ToTable("AppRegStage", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdRegistration.StdRegStage", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("No")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<Guid?>("RegStageId")
                        .HasColumnType("RAW(16)");

                    b.Property<int?>("RegStageId1")
                        .HasColumnType("NUMBER(10)");

                    b.Property<Guid?>("StdRegistrationId")
                        .HasColumnType("RAW(16)");

                    b.HasKey("Id");

                    b.HasIndex("RegStageId1");

                    b.HasIndex("StdRegistrationId");

                    b.ToTable("AppStdRegStage", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdRegistration.StdRegistration", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("Agent")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("AgentDate")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("AgentNo")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("AgentSource")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("CreatorId");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("No")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<Guid?>("RegOrderId")
                        .HasColumnType("RAW(16)");

                    b.Property<int?>("RegOrderId1")
                        .HasColumnType("NUMBER(10)");

                    b.Property<byte?>("RegistrationState")
                        .HasColumnType("NUMBER(3)");

                    b.Property<int?>("SemesterId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("RAW(16)");

                    b.Property<int>("Year")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("RegOrderId1");

                    b.HasIndex("SemesterId");

                    b.HasIndex("StudentId");

                    b.ToTable("AppStdRegistration", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdSeqStudy.StdSeqStudy", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool?>("IsSemesterCounted")
                        .HasColumnType("NUMBER(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("NVARCHAR2(250)");

                    b.Property<bool?>("SEQ_CANCEL_CHEK")
                        .HasColumnType("NUMBER(1)");

                    b.Property<int?>("SeqResult")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("SeqResultId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.Property<Guid?>("StdSeqSumId")
                        .HasColumnType("RAW(16)");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("RAW(16)");

                    b.Property<bool?>("TakeSemesterExam")
                        .HasColumnType("NUMBER(1)");

                    b.HasKey("Id");

                    b.HasIndex("StdSeqSumId");

                    b.HasIndex("StudentId");

                    b.ToTable("AppStdSeqStudy", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdSeqStudy.StdSeqSum", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool?>("Fixed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("LastModifierId");

                    b.Property<int?>("SeqResult")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("SeqResultId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("SeqStatus")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("SeqStatusId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("RAW(16)");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("AppStdSeqSum", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdSymTransform.StdSymTransform", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("RAW(16)");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("AppStdSymTransform", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdSymTransform.StdSymTransformDet", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<Guid?>("StdSymTransformId")
                        .HasColumnType("RAW(16)");

                    b.HasKey("Id");

                    b.ToTable("AppStdSymTransformDet", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdTermination.StdTerminateStage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("StdTerminationId")
                        .HasColumnType("RAW(16)");

                    b.HasKey("Id");

                    b.HasIndex("StdTerminationId");

                    b.ToTable("AppStdTerminateStage", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdTermination.StdTermination", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("Agent")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("AgentDate")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("AgentNo")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("AgentSource")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("CreatorId");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("No")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("PrevAdmissionId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("SemesterId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("RAW(16)");

                    b.Property<Guid?>("TerminationOrderId")
                        .HasColumnType("RAW(16)");

                    b.Property<int?>("TerminationOrderId1")
                        .HasColumnType("NUMBER(10)");

                    b.Property<byte?>("TerminationState")
                        .HasColumnType("NUMBER(3)");

                    b.Property<int>("Year")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("PrevAdmissionId");

                    b.HasIndex("SemesterId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TerminationOrderId1");

                    b.ToTable("AppStdTermination", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdTermination.TerminationOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("Ord")
                        .HasColumnType("NUMBER(10)");

                    b.Property<byte?>("TerminationType")
                        .HasColumnType("NUMBER(3)");

                    b.HasKey("Id");

                    b.ToTable("AppTerminationOrder", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdTermination.TerminationStage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("Ord")
                        .HasColumnType("NUMBER(10)");

                    b.Property<byte?>("StageState")
                        .HasColumnType("NUMBER(3)");

                    b.HasKey("Id");

                    b.ToTable("AppTerminationStage", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.Student.Admission.Admission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdmissionKind")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Barcode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("FeeCalcType")
                        .HasColumnType("NUMBER(10)");

                    b.Property<byte?>("Ministry")
                        .HasColumnType("NUMBER(3)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NameEn")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("Ord")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.ToTable("AppAdmission", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.Student.CivilReg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Barcode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("CityId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("CountryId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NameEn")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("Ord")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.ToTable("AppCivilReg", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.Student.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Barcode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NameEn")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("Ord")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.ToTable("AppClass", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.Student.IdentifierType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Barcode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NameEn")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("Ord")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.ToTable("AppIdentifierType", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.Student.Military", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Barcode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("CityId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NameEn")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("Ord")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.ToTable("AppMilitary", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.Student.Semester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Barcode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("GradeNameAr")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("GradeNameEn")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NameEn")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("Ord")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.ToTable("AppSemester", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.Student.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool?>("Fixed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<bool?>("IsArab")
                        .HasColumnType("NUMBER(1)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool?>("IsForeign")
                        .HasColumnType("NUMBER(1)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("NVARCHAR2(250)");

                    b.Property<int?>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("StudyPlanId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.ToTable("AppStudent", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.TypeLic.TypeLic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Barcode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NameEn")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("Ord")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.ToTable("AppTypeLic", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.TypeLic.TypeLicBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Barcode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NameEn")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("Ord")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("TypeLicId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("TypeLicId");

                    b.ToTable("AppTypeLicBranch", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.Univ.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Barcode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NameEn")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("Ord")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("AppBranch", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.Univ.Collage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Barcode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("ColClassification")
                        .HasColumnType("NUMBER(10)");

                    b.Property<byte>("ColType")
                        .HasColumnType("NUMBER(3)");

                    b.Property<string>("DeanAr")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("DeanEn")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<byte>("Degree")
                        .HasColumnType("NUMBER(3)");

                    b.Property<string>("DegreeNameAr")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("DegreeNameEn")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<int?>("NumYear")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("Ord")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("UnivSectionId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("UnivSectionId");

                    b.ToTable("AppCollage", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.Univ.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Barcode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("CollageId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("DegreeNameAr")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("DegreeNameEn")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<int?>("Ord")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("CollageId");

                    b.ToTable("AppDepartment", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.Univ.StudyPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CollageId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("FireDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("Ord")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("CollageId");

                    b.ToTable("StudyPlan");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.Univ.Univ", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Barcode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<int?>("Ord")
                        .HasColumnType("NUMBER(10)");

                    b.Property<byte>("UnivType")
                        .HasColumnType("NUMBER(3)");

                    b.HasKey("Id");

                    b.ToTable("AppUniv", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.Univ.UnivSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Barcode")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<int?>("Ord")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("UnivId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("UnivId");

                    b.ToTable("AppUnivSection", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.StdNonSyrianUniv", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("RAW(16)");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("AppStdNonSyrianUniv", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("ApplicationName")
                        .HasMaxLength(96)
                        .HasColumnType("NVARCHAR2(96)")
                        .HasColumnName("ApplicationName");

                    b.Property<string>("BrowserInfo")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR2(512)")
                        .HasColumnName("BrowserInfo");

                    b.Property<string>("ClientId")
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)")
                        .HasColumnName("ClientId");

                    b.Property<string>("ClientIpAddress")
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)")
                        .HasColumnName("ClientIpAddress");

                    b.Property<string>("ClientName")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)")
                        .HasColumnName("ClientName");

                    b.Property<string>("Comments")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)")
                        .HasColumnName("Comments");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("CorrelationId")
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)")
                        .HasColumnName("CorrelationId");

                    b.Property<string>("Exceptions")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("ExecutionDuration")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ExecutionDuration");

                    b.Property<DateTime>("ExecutionTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("HttpMethod")
                        .HasMaxLength(16)
                        .HasColumnType("NVARCHAR2(16)")
                        .HasColumnName("HttpMethod");

                    b.Property<int?>("HttpStatusCode")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("HttpStatusCode");

                    b.Property<Guid?>("ImpersonatorTenantId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("ImpersonatorTenantId");

                    b.Property<string>("ImpersonatorTenantName")
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)")
                        .HasColumnName("ImpersonatorTenantName");

                    b.Property<Guid?>("ImpersonatorUserId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("ImpersonatorUserId");

                    b.Property<string>("ImpersonatorUserName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)")
                        .HasColumnName("ImpersonatorUserName");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("TenantId");

                    b.Property<string>("TenantName")
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)")
                        .HasColumnName("TenantName");

                    b.Property<string>("Url")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)")
                        .HasColumnName("Url");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("UserId");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)")
                        .HasColumnName("UserName");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "ExecutionTime");

                    b.HasIndex("TenantId", "UserId", "ExecutionTime");

                    b.ToTable("AbpAuditLogs", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.AuditLogAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<Guid>("AuditLogId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("AuditLogId");

                    b.Property<int>("ExecutionDuration")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ExecutionDuration");

                    b.Property<DateTime>("ExecutionTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("ExecutionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("MethodName")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)")
                        .HasColumnName("MethodName");

                    b.Property<string>("Parameters")
                        .HasMaxLength(2000)
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("Parameters");

                    b.Property<string>("ServiceName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)")
                        .HasColumnName("ServiceName");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AuditLogId");

                    b.HasIndex("TenantId", "ServiceName", "MethodName", "ExecutionTime");

                    b.ToTable("AbpAuditLogActions", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.EntityChange", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<Guid>("AuditLogId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("AuditLogId");

                    b.Property<DateTime>("ChangeTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("ChangeTime");

                    b.Property<byte>("ChangeType")
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("ChangeType");

                    b.Property<string>("EntityId")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)")
                        .HasColumnName("EntityId");

                    b.Property<Guid?>("EntityTenantId")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("EntityTypeFullName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)")
                        .HasColumnName("EntityTypeFullName");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("AuditLogId");

                    b.HasIndex("TenantId", "EntityTypeFullName", "EntityId");

                    b.ToTable("AbpEntityChanges", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.EntityPropertyChange", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<Guid>("EntityChangeId")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("NewValue")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR2(512)")
                        .HasColumnName("NewValue");

                    b.Property<string>("OriginalValue")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR2(512)")
                        .HasColumnName("OriginalValue");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)")
                        .HasColumnName("PropertyName");

                    b.Property<string>("PropertyTypeFullName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)")
                        .HasColumnName("PropertyTypeFullName");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("EntityChangeId");

                    b.ToTable("AbpEntityPropertyChanges", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.BackgroundJobs.BackgroundJobRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CreationTime");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsAbandoned")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("JobArgs")
                        .IsRequired()
                        .HasMaxLength(1048576)
                        .HasColumnType("NCLOB");

                    b.Property<string>("JobName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)");

                    b.Property<DateTime?>("LastTryTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("NextTryTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<byte>("Priority")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(3)")
                        .HasDefaultValue((byte)15);

                    b.Property<short>("TryCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(5)")
                        .HasDefaultValue((short)0);

                    b.HasKey("Id");

                    b.HasIndex("IsAbandoned", "NextTryTime");

                    b.ToTable("AbpBackgroundJobs", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.FeatureManagement.FeatureDefinitionRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("AllowedProviders")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("DefaultValue")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)");

                    b.Property<bool>("IsAvailableToHost")
                        .HasColumnType("NUMBER(1)");

                    b.Property<bool>("IsVisibleToClients")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)");

                    b.Property<string>("ParentName")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)");

                    b.Property<string>("ValueType")
                        .HasMaxLength(2048)
                        .HasColumnType("NCLOB");

                    b.HasKey("Id");

                    b.HasIndex("GroupName");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AbpFeatures", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.FeatureManagement.FeatureGroupDefinitionRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AbpFeatureGroups", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.FeatureManagement.FeatureValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)");

                    b.Property<string>("ProviderName")
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)");

                    b.HasKey("Id");

                    b.HasIndex("Name", "ProviderName", "ProviderKey")
                        .IsUnique()
                        .HasFilter("\"ProviderName\" IS NOT NULL AND \"ProviderKey\" IS NOT NULL");

                    b.ToTable("AbpFeatureValues", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityClaimType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsStatic")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("Regex")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR2(512)");

                    b.Property<string>("RegexDescription")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)");

                    b.Property<bool>("Required")
                        .HasColumnType("NUMBER(1)");

                    b.Property<int>("ValueType")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.ToTable("AbpClaimTypes", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityLinkUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<Guid?>("SourceTenantId")
                        .HasColumnType("RAW(16)");

                    b.Property<Guid>("SourceUserId")
                        .HasColumnType("RAW(16)");

                    b.Property<Guid?>("TargetTenantId")
                        .HasColumnType("RAW(16)");

                    b.Property<Guid>("TargetUserId")
                        .HasColumnType("RAW(16)");

                    b.HasKey("Id");

                    b.HasIndex("SourceUserId", "SourceTenantId", "TargetUserId", "TargetTenantId")
                        .IsUnique()
                        .HasFilter("\"SourceTenantId\" IS NOT NULL AND \"TargetTenantId\" IS NOT NULL");

                    b.ToTable("AbpLinkUsers", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityRole", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<int>("EntityVersion")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IsDefault");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IsPublic");

                    b.Property<bool>("IsStatic")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IsStatic");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName");

                    b.ToTable("AbpRoles", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityRoleClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("ClaimType")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(1024)
                        .HasColumnType("NVARCHAR2(1024)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("RAW(16)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AbpRoleClaims", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentitySecurityLog", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("Action")
                        .HasMaxLength(96)
                        .HasColumnType("NVARCHAR2(96)");

                    b.Property<string>("ApplicationName")
                        .HasMaxLength(96)
                        .HasColumnType("NVARCHAR2(96)");

                    b.Property<string>("BrowserInfo")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR2(512)");

                    b.Property<string>("ClientId")
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)");

                    b.Property<string>("ClientIpAddress")
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("CorrelationId")
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("Identity")
                        .HasMaxLength(96)
                        .HasColumnType("NVARCHAR2(96)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("TenantId");

                    b.Property<string>("TenantName")
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Action");

                    b.HasIndex("TenantId", "ApplicationName");

                    b.HasIndex("TenantId", "Identity");

                    b.HasIndex("TenantId", "UserId");

                    b.ToTable("AbpSecurityLogs", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)")
                        .HasColumnName("Email");

                    b.Property<bool>("EmailConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("EmailConfirmed");

                    b.Property<int>("EntityVersion")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsExternal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsExternal");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("LastModifierId");

                    b.Property<DateTimeOffset?>("LastPasswordChangeTime")
                        .HasColumnType("TIMESTAMP(7) WITH TIME ZONE");

                    b.Property<bool>("LockoutEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TIMESTAMP(7) WITH TIME ZONE");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)")
                        .HasColumnName("Name");

                    b.Property<string>("NormalizedEmail")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)")
                        .HasColumnName("NormalizedEmail");

                    b.Property<string>("NormalizedUserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)")
                        .HasColumnName("NormalizedUserName");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)")
                        .HasColumnName("PasswordHash");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(16)
                        .HasColumnType("NVARCHAR2(16)")
                        .HasColumnName("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)")
                        .HasColumnName("SecurityStamp");

                    b.Property<bool>("ShouldChangePasswordOnNextLogin")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("Surname")
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)")
                        .HasColumnName("Surname");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("TenantId");

                    b.Property<bool>("TwoFactorEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)")
                        .HasColumnName("UserName");

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.HasIndex("NormalizedEmail");

                    b.HasIndex("NormalizedUserName");

                    b.HasIndex("UserName");

                    b.ToTable("AbpUsers", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("ClaimType")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(1024)
                        .HasColumnType("NVARCHAR2(1024)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("TenantId");

                    b.Property<Guid>("UserId")
                        .HasColumnType("RAW(16)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AbpUserClaims", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserDelegation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<Guid>("SourceUserId")
                        .HasColumnType("RAW(16)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<Guid>("TargetUserId")
                        .HasColumnType("RAW(16)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.ToTable("AbpUserDelegations", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserLogin", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)");

                    b.Property<string>("ProviderDisplayName")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)");

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasMaxLength(196)
                        .HasColumnType("NVARCHAR2(196)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("TenantId");

                    b.HasKey("UserId", "LoginProvider");

                    b.HasIndex("LoginProvider", "ProviderKey");

                    b.ToTable("AbpUserLogins", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserOrganizationUnit", b =>
                {
                    b.Property<Guid>("OrganizationUnitId")
                        .HasColumnType("RAW(16)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("RAW(16)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("TenantId");

                    b.HasKey("OrganizationUnitId", "UserId");

                    b.HasIndex("UserId", "OrganizationUnitId");

                    b.ToTable("AbpUserOrganizationUnits", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("RAW(16)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("RAW(16)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("TenantId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId", "UserId");

                    b.ToTable("AbpUserRoles", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("TenantId");

                    b.Property<string>("Value")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AbpUserTokens", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.OrganizationUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(95)
                        .HasColumnType("NVARCHAR2(95)")
                        .HasColumnName("Code");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)")
                        .HasColumnName("DisplayName");

                    b.Property<int>("EntityVersion")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("RAW(16)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("ParentId");

                    b.ToTable("AbpOrganizationUnits", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.Identity.OrganizationUnitRole", b =>
                {
                    b.Property<Guid>("OrganizationUnitId")
                        .HasColumnType("RAW(16)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("RAW(16)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("TenantId");

                    b.HasKey("OrganizationUnitId", "RoleId");

                    b.HasIndex("RoleId", "OrganizationUnitId");

                    b.ToTable("AbpOrganizationUnitRoles", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.OpenIddict.Applications.OpenIddictApplication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("ApplicationType")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("ClientId")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<string>("ClientSecret")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ClientType")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("ClientUri")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("ConsentType")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("DisplayName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("DisplayNames")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<string>("JsonWebKeySet")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LogoUri")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Permissions")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("PostLogoutRedirectUris")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Properties")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("RedirectUris")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Requirements")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Settings")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("OpenIddictApplications", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.OpenIddict.Authorizations.OpenIddictAuthorization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<Guid?>("ApplicationId")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Properties")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Scopes")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("Subject")
                        .HasMaxLength(400)
                        .HasColumnType("NVARCHAR2(400)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId", "Status", "Subject", "Type");

                    b.ToTable("OpenIddictAuthorizations", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.OpenIddict.Scopes.OpenIddictScope", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Descriptions")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("DisplayNames")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)");

                    b.Property<string>("Properties")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Resources")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("OpenIddictScopes", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.OpenIddict.Tokens.OpenIddictToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<Guid?>("ApplicationId")
                        .HasColumnType("RAW(16)");

                    b.Property<Guid?>("AuthorizationId")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DeletionTime");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Payload")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Properties")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("RedemptionDate")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("ReferenceId")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("Subject")
                        .HasMaxLength(400)
                        .HasColumnType("NVARCHAR2(400)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorizationId");

                    b.HasIndex("ReferenceId");

                    b.HasIndex("ApplicationId", "Status", "Subject", "Type");

                    b.ToTable("OpenIddictTokens", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.PermissionManagement.PermissionDefinitionRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<byte>("MultiTenancySide")
                        .HasColumnType("NUMBER(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)");

                    b.Property<string>("ParentName")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)");

                    b.Property<string>("Providers")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)");

                    b.Property<string>("StateCheckers")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.HasKey("Id");

                    b.HasIndex("GroupName");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AbpPermissions", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.PermissionManagement.PermissionGrant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)");

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)");

                    b.Property<string>("ProviderName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("TenantId", "Name", "ProviderName", "ProviderKey")
                        .IsUnique()
                        .HasFilter("\"TenantId\" IS NOT NULL");

                    b.ToTable("AbpPermissionGrants", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.PermissionManagement.PermissionGroupDefinitionRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AbpPermissionGroups", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.SettingManagement.Setting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)");

                    b.Property<string>("ProviderName")
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("Name", "ProviderName", "ProviderKey")
                        .IsUnique()
                        .HasFilter("\"ProviderName\" IS NOT NULL AND \"ProviderKey\" IS NOT NULL");

                    b.ToTable("AbpSettings", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.SettingManagement.SettingDefinitionRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("DefaultValue")
                        .HasMaxLength(2000)
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR2(512)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsEncrypted")
                        .HasColumnType("NUMBER(1)");

                    b.Property<bool>("IsInherited")
                        .HasColumnType("NUMBER(1)");

                    b.Property<bool>("IsVisibleToClients")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)");

                    b.Property<string>("Providers")
                        .HasMaxLength(1024)
                        .HasColumnType("NVARCHAR2(1024)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("AbpSettingDefinitions", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.TenantManagement.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DeletionTime");

                    b.Property<int>("EntityVersion")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("ExtraProperties")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("NormalizedName");

                    b.ToTable("AbpTenants", (string)null);
                });

            modelBuilder.Entity("Volo.Abp.TenantManagement.TenantConnectionString", b =>
                {
                    b.Property<Guid>("TenantId")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("NVARCHAR2(1024)");

                    b.HasKey("TenantId", "Name");

                    b.ToTable("AbpTenantConnectionStrings", (string)null);
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.Country.City", b =>
                {
                    b.HasOne("Univ.Hi_Student_Affairs.Domain.Country.Country", null)
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdAbsence.StdAbsence", b =>
                {
                    b.HasOne("Univ.Hi_Student_Affairs.Domain.StdAbsence.AbsenceOrder", "AbsenceOrder")
                        .WithMany()
                        .HasForeignKey("AbsenceOrderId1");

                    b.HasOne("Univ.Hi_Student_Affairs.Domain.Student.Semester", "SemesterFrom")
                        .WithMany()
                        .HasForeignKey("SemesterFromId");

                    b.HasOne("Univ.Hi_Student_Affairs.Domain.Student.Semester", "SemesterTo")
                        .WithMany()
                        .HasForeignKey("SemesterToId");

                    b.HasOne("Univ.Hi_Student_Affairs.Domain.Student.Student", null)
                        .WithMany("StdAbsences")
                        .HasForeignKey("StudentId");

                    b.Navigation("AbsenceOrder");

                    b.Navigation("SemesterFrom");

                    b.Navigation("SemesterTo");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdAbsence.StdAbsenceStage", b =>
                {
                    b.HasOne("Univ.Hi_Student_Affairs.Domain.StdAbsence.StdAbsence", null)
                        .WithMany("StdAbsenceStages")
                        .HasForeignKey("StdAbsenceId");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdAdmission.StdAdmission", b =>
                {
                    b.HasOne("Univ.Hi_Student_Affairs.Domain.Student.Admission.Admission", "Admission")
                        .WithMany()
                        .HasForeignKey("AdmissionID");

                    b.HasOne("Univ.Hi_Student_Affairs.Domain.Student.Student", null)
                        .WithMany("StdAdmissions")
                        .HasForeignKey("StudentId");

                    b.Navigation("Admission");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdAffiliation.StdAffiliation", b =>
                {
                    b.HasOne("Univ.Hi_Student_Affairs.Domain.StdAffiliation.AffiliationOrder", "AffiliationOrder")
                        .WithMany()
                        .HasForeignKey("AffiliationOrderId1");

                    b.HasOne("Univ.Hi_Student_Affairs.Domain.Student.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId");

                    b.HasOne("Univ.Hi_Student_Affairs.Domain.Student.Student", null)
                        .WithMany("StdAffiliations")
                        .HasForeignKey("StudentId");

                    b.Navigation("AffiliationOrder");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdAffiliation.StdAffiliationStage", b =>
                {
                    b.HasOne("Univ.Hi_Student_Affairs.Domain.StdAffiliation.StdAffiliation", null)
                        .WithMany("StdAffiliationStages")
                        .HasForeignKey("StdAffiliationId");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdCertificate.StdCertificate", b =>
                {
                    b.HasOne("Univ.Hi_Student_Affairs.Domain.Country.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.HasOne("Univ.Hi_Student_Affairs.Domain.Country.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Univ.Hi_Student_Affairs.Domain.Student.Student", null)
                        .WithMany("StdCertificates")
                        .HasForeignKey("StudentId");

                    b.Navigation("City");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdChangeCollage.StdChangeCollage", b =>
                {
                    b.HasOne("Univ.Hi_Student_Affairs.Domain.Student.Student", null)
                        .WithMany("StdChangeCollages")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdInstitute.StdInstitute", b =>
                {
                    b.HasOne("Univ.Hi_Student_Affairs.Domain.Student.Student", null)
                        .WithMany("StdInstitutes")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdLife.StdLife", b =>
                {
                    b.HasOne("Univ.Hi_Student_Affairs.Domain.Student.Student", "Student")
                        .WithMany("StdLife")
                        .HasForeignKey("StudentId");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdPunishment.Punishment", b =>
                {
                    b.HasOne("Univ.Hi_Student_Affairs.Domain.StdPunishment.Deprivation", "Deprivation")
                        .WithMany()
                        .HasForeignKey("DeprivationId");

                    b.Navigation("Deprivation");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdPunishment.StdPunishment", b =>
                {
                    b.HasOne("Univ.Hi_Student_Affairs.Domain.Student.Student", null)
                        .WithMany("StdPunishments")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdPunishment.StdPunishmentStage", b =>
                {
                    b.HasOne("Univ.Hi_Student_Affairs.Domain.StdPunishment.StdPunishment", null)
                        .WithMany("StdPunishmentStages")
                        .HasForeignKey("StdPunishmentId");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdRegistration.StdRegStage", b =>
                {
                    b.HasOne("Univ.Hi_Student_Affairs.Domain.StdRegistration.RegStage", "RegStage")
                        .WithMany()
                        .HasForeignKey("RegStageId1");

                    b.HasOne("Univ.Hi_Student_Affairs.Domain.StdRegistration.StdRegistration", null)
                        .WithMany("StdRegStages")
                        .HasForeignKey("StdRegistrationId");

                    b.Navigation("RegStage");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdRegistration.StdRegistration", b =>
                {
                    b.HasOne("Univ.Hi_Student_Affairs.Domain.StdRegistration.RegOrder", "RegOrder")
                        .WithMany()
                        .HasForeignKey("RegOrderId1");

                    b.HasOne("Univ.Hi_Student_Affairs.Domain.Student.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId");

                    b.HasOne("Univ.Hi_Student_Affairs.Domain.Student.Student", null)
                        .WithMany("StdRegistrations")
                        .HasForeignKey("StudentId");

                    b.Navigation("RegOrder");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdSeqStudy.StdSeqStudy", b =>
                {
                    b.HasOne("Univ.Hi_Student_Affairs.Domain.StdSeqStudy.StdSeqSum", null)
                        .WithMany("StdSeqStudies")
                        .HasForeignKey("StdSeqSumId");

                    b.HasOne("Univ.Hi_Student_Affairs.Domain.Student.Student", null)
                        .WithMany("StdSeqStudies")
                        .HasForeignKey("StudentId");

                    b.OwnsOne("Univ.Hi_Student_Affairs.Domain.ValueObj.UniveInfo", "UniveInfo", b1 =>
                        {
                            b1.Property<Guid>("StdSeqStudyId")
                                .HasColumnType("RAW(16)");

                            b1.Property<int>("AdmissionId")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("AdmissionId");

                            b1.Property<int?>("BranchId")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("BranchId");

                            b1.Property<int?>("ClassId")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("ClassId");

                            b1.Property<int>("CollageId")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("CollageId");

                            b1.Property<int?>("DepartmentId")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("DepartmentId");

                            b1.Property<int?>("SemesterId")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("SemesterId");

                            b1.Property<int>("UnivId")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("UnivId");

                            b1.Property<int>("UnivSectionId")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("UnivSectionId");

                            b1.Property<int>("Year")
                                .HasColumnType("NUMBER(10)");

                            b1.HasKey("StdSeqStudyId");

                            b1.HasIndex("AdmissionId");

                            b1.HasIndex("BranchId");

                            b1.HasIndex("ClassId");

                            b1.HasIndex("CollageId");

                            b1.HasIndex("DepartmentId");

                            b1.HasIndex("SemesterId");

                            b1.HasIndex("UnivId");

                            b1.HasIndex("UnivSectionId");

                            b1.ToTable("AppStdSeqStudy");

                            b1.HasOne("Univ.Hi_Student_Affairs.Domain.Student.Admission.Admission", "Admission")
                                .WithMany()
                                .HasForeignKey("AdmissionId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.HasOne("Univ.Hi_Student_Affairs.Domain.Univ.Branch", "Branch")
                                .WithMany()
                                .HasForeignKey("BranchId");

                            b1.HasOne("Univ.Hi_Student_Affairs.Domain.Student.Class", "Class")
                                .WithMany()
                                .HasForeignKey("ClassId");

                            b1.HasOne("Univ.Hi_Student_Affairs.Domain.Univ.Collage", "Collage")
                                .WithMany()
                                .HasForeignKey("CollageId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.HasOne("Univ.Hi_Student_Affairs.Domain.Univ.Department", "Department")
                                .WithMany()
                                .HasForeignKey("DepartmentId");

                            b1.HasOne("Univ.Hi_Student_Affairs.Domain.Student.Semester", "Semester")
                                .WithMany()
                                .HasForeignKey("SemesterId");

                            b1.WithOwner()
                                .HasForeignKey("StdSeqStudyId");

                            b1.HasOne("Univ.Hi_Student_Affairs.Domain.Univ.Univ", "Univ")
                                .WithMany()
                                .HasForeignKey("UnivId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.HasOne("Univ.Hi_Student_Affairs.Domain.Univ.UnivSection", "UnivSection")
                                .WithMany()
                                .HasForeignKey("UnivSectionId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.Navigation("Admission");

                            b1.Navigation("Branch");

                            b1.Navigation("Class");

                            b1.Navigation("Collage");

                            b1.Navigation("Department");

                            b1.Navigation("Semester");

                            b1.Navigation("Univ");

                            b1.Navigation("UnivSection");
                        });

                    b.Navigation("UniveInfo");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdSeqStudy.StdSeqSum", b =>
                {
                    b.HasOne("Univ.Hi_Student_Affairs.Domain.Student.Student", null)
                        .WithMany("StdSeqSums")
                        .HasForeignKey("StudentId");

                    b.OwnsOne("Univ.Hi_Student_Affairs.Domain.ValueObj.UniveInfo", "UniveInfo", b1 =>
                        {
                            b1.Property<Guid>("StdSeqSumId")
                                .HasColumnType("RAW(16)");

                            b1.Property<int>("AdmissionId")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("AdmissionId");

                            b1.Property<int?>("BranchId")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("BranchId");

                            b1.Property<int?>("ClassId")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("ClassId");

                            b1.Property<int>("CollageId")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("CollageId");

                            b1.Property<int?>("DepartmentId")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("DepartmentId");

                            b1.Property<int?>("SemesterId")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("SemesterId");

                            b1.Property<int>("UnivId")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("UnivId");

                            b1.Property<int>("UnivSectionId")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("UnivSectionId");

                            b1.Property<int>("Year")
                                .HasColumnType("NUMBER(10)");

                            b1.HasKey("StdSeqSumId");

                            b1.HasIndex("AdmissionId");

                            b1.HasIndex("BranchId");

                            b1.HasIndex("ClassId");

                            b1.HasIndex("CollageId");

                            b1.HasIndex("DepartmentId");

                            b1.HasIndex("SemesterId");

                            b1.HasIndex("UnivId");

                            b1.HasIndex("UnivSectionId");

                            b1.ToTable("AppStdSeqSum");

                            b1.HasOne("Univ.Hi_Student_Affairs.Domain.Student.Admission.Admission", "Admission")
                                .WithMany()
                                .HasForeignKey("AdmissionId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.HasOne("Univ.Hi_Student_Affairs.Domain.Univ.Branch", "Branch")
                                .WithMany()
                                .HasForeignKey("BranchId");

                            b1.HasOne("Univ.Hi_Student_Affairs.Domain.Student.Class", "Class")
                                .WithMany()
                                .HasForeignKey("ClassId");

                            b1.HasOne("Univ.Hi_Student_Affairs.Domain.Univ.Collage", "Collage")
                                .WithMany()
                                .HasForeignKey("CollageId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.HasOne("Univ.Hi_Student_Affairs.Domain.Univ.Department", "Department")
                                .WithMany()
                                .HasForeignKey("DepartmentId");

                            b1.HasOne("Univ.Hi_Student_Affairs.Domain.Student.Semester", "Semester")
                                .WithMany()
                                .HasForeignKey("SemesterId");

                            b1.WithOwner()
                                .HasForeignKey("StdSeqSumId");

                            b1.HasOne("Univ.Hi_Student_Affairs.Domain.Univ.Univ", "Univ")
                                .WithMany()
                                .HasForeignKey("UnivId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.HasOne("Univ.Hi_Student_Affairs.Domain.Univ.UnivSection", "UnivSection")
                                .WithMany()
                                .HasForeignKey("UnivSectionId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.Navigation("Admission");

                            b1.Navigation("Branch");

                            b1.Navigation("Class");

                            b1.Navigation("Collage");

                            b1.Navigation("Department");

                            b1.Navigation("Semester");

                            b1.Navigation("Univ");

                            b1.Navigation("UnivSection");
                        });

                    b.Navigation("UniveInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdSymTransform.StdSymTransform", b =>
                {
                    b.HasOne("Univ.Hi_Student_Affairs.Domain.Student.Student", null)
                        .WithMany("StdSymTransforms")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdTermination.StdTerminateStage", b =>
                {
                    b.HasOne("Univ.Hi_Student_Affairs.Domain.StdTermination.StdTermination", null)
                        .WithMany("StdTerminateStages")
                        .HasForeignKey("StdTerminationId");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdTermination.StdTermination", b =>
                {
                    b.HasOne("Univ.Hi_Student_Affairs.Domain.Student.Admission.Admission", "PrevAdmission")
                        .WithMany()
                        .HasForeignKey("PrevAdmissionId");

                    b.HasOne("Univ.Hi_Student_Affairs.Domain.Student.Semester", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId");

                    b.HasOne("Univ.Hi_Student_Affairs.Domain.Student.Student", null)
                        .WithMany("StdTerminations")
                        .HasForeignKey("StudentId");

                    b.HasOne("Univ.Hi_Student_Affairs.Domain.StdTermination.TerminationOrder", "TerminationOrder")
                        .WithMany()
                        .HasForeignKey("TerminationOrderId1");

                    b.Navigation("PrevAdmission");

                    b.Navigation("Semester");

                    b.Navigation("TerminationOrder");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.Student.Student", b =>
                {
                    b.OwnsOne("Univ.Hi_Student_Affairs.Domain.ValueObj.UniveInfo", "UniveInfo", b1 =>
                        {
                            b1.Property<Guid>("StudentId")
                                .HasColumnType("RAW(16)");

                            b1.Property<int>("AdmissionId")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("AdmissionId");

                            b1.Property<int?>("BranchId")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("BranchId");

                            b1.Property<int?>("ClassId")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("ClassId");

                            b1.Property<int>("CollageId")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("CollageId");

                            b1.Property<int?>("DepartmentId")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("DepartmentId");

                            b1.Property<int?>("SemesterId")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("SemesterId");

                            b1.Property<int>("UnivId")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("UnivId");

                            b1.Property<int>("UnivSectionId")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("UnivSectionId");

                            b1.Property<int>("Year")
                                .HasColumnType("NUMBER(10)");

                            b1.HasKey("StudentId");

                            b1.HasIndex("AdmissionId");

                            b1.HasIndex("BranchId");

                            b1.HasIndex("ClassId");

                            b1.HasIndex("CollageId");

                            b1.HasIndex("DepartmentId");

                            b1.HasIndex("SemesterId");

                            b1.HasIndex("UnivId");

                            b1.HasIndex("UnivSectionId");

                            b1.ToTable("AppStudent");

                            b1.HasOne("Univ.Hi_Student_Affairs.Domain.Student.Admission.Admission", "Admission")
                                .WithMany()
                                .HasForeignKey("AdmissionId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.HasOne("Univ.Hi_Student_Affairs.Domain.Univ.Branch", "Branch")
                                .WithMany()
                                .HasForeignKey("BranchId");

                            b1.HasOne("Univ.Hi_Student_Affairs.Domain.Student.Class", "Class")
                                .WithMany()
                                .HasForeignKey("ClassId");

                            b1.HasOne("Univ.Hi_Student_Affairs.Domain.Univ.Collage", "Collage")
                                .WithMany()
                                .HasForeignKey("CollageId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.HasOne("Univ.Hi_Student_Affairs.Domain.Univ.Department", "Department")
                                .WithMany()
                                .HasForeignKey("DepartmentId");

                            b1.HasOne("Univ.Hi_Student_Affairs.Domain.Student.Semester", "Semester")
                                .WithMany()
                                .HasForeignKey("SemesterId");

                            b1.WithOwner()
                                .HasForeignKey("StudentId");

                            b1.HasOne("Univ.Hi_Student_Affairs.Domain.Univ.Univ", "Univ")
                                .WithMany()
                                .HasForeignKey("UnivId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.HasOne("Univ.Hi_Student_Affairs.Domain.Univ.UnivSection", "UnivSection")
                                .WithMany()
                                .HasForeignKey("UnivSectionId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.Navigation("Admission");

                            b1.Navigation("Branch");

                            b1.Navigation("Class");

                            b1.Navigation("Collage");

                            b1.Navigation("Department");

                            b1.Navigation("Semester");

                            b1.Navigation("Univ");

                            b1.Navigation("UnivSection");
                        });

                    b.OwnsOne("Univ.Hi_Student_Affairs.Domain.ValueObj.StdNo", "StdNo", b1 =>
                        {
                            b1.Property<Guid>("StudentId")
                                .HasColumnType("RAW(16)");

                            b1.Property<decimal?>("ExamCollageId")
                                .HasColumnType("NUMBER(20)")
                                .HasColumnName("ExamCollageId");

                            b1.Property<decimal>("StdCollageId")
                                .HasColumnType("NUMBER(20)")
                                .HasColumnName("StdCollageId");

                            b1.Property<decimal>("StdMinistryId")
                                .HasColumnType("NUMBER(20)")
                                .HasColumnName("StdMinistryId");

                            b1.HasKey("StudentId");

                            b1.ToTable("AppStudent");

                            b1.WithOwner()
                                .HasForeignKey("StudentId");
                        });

                    b.OwnsOne("Univ.Hi_Student_Affairs.Domain.ValueObj.StudentProfile", "studnetProfile", b1 =>
                        {
                            b1.Property<Guid>("StudentId")
                                .HasColumnType("RAW(16)");

                            b1.Property<int?>("CountryId")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("CountryId");

                            b1.Property<byte[]>("Data")
                                .HasColumnType("RAW(2000)");

                            b1.Property<int?>("DayBirth")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("DayBirth");

                            b1.Property<string>("FatherNameAr")
                                .IsRequired()
                                .HasMaxLength(250)
                                .HasColumnType("NVARCHAR2(250)")
                                .HasColumnName("FatherNameAr");

                            b1.Property<string>("FatherNameEn")
                                .HasMaxLength(250)
                                .HasColumnType("NVARCHAR2(250)")
                                .HasColumnName("FatherNameEn");

                            b1.Property<string>("FirstNameAR")
                                .IsRequired()
                                .HasMaxLength(250)
                                .HasColumnType("NVARCHAR2(250)")
                                .HasColumnName("FirstNameAR");

                            b1.Property<string>("FirstNameEn")
                                .HasMaxLength(250)
                                .HasColumnType("NVARCHAR2(250)")
                                .HasColumnName("FirstNameEn");

                            b1.Property<string>("Identifier")
                                .HasMaxLength(250)
                                .HasColumnType("NVARCHAR2(250)")
                                .HasColumnName("Identifier");

                            b1.Property<int?>("IdentifierTypeId")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("IdentifierTypeId");

                            b1.Property<byte?>("Jender")
                                .HasColumnType("NUMBER(3)")
                                .HasColumnName("Jender");

                            b1.Property<string>("LastNameAr")
                                .IsRequired()
                                .HasMaxLength(250)
                                .HasColumnType("NVARCHAR2(250)")
                                .HasColumnName("LastNameAr");

                            b1.Property<string>("LastNameEn")
                                .HasMaxLength(250)
                                .HasColumnType("NVARCHAR2(250)")
                                .HasColumnName("LastNameEn");

                            b1.Property<int?>("MonthBirth")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("MonthBirth");

                            b1.Property<string>("MotherNameAr")
                                .IsRequired()
                                .HasMaxLength(250)
                                .HasColumnType("NVARCHAR2(250)")
                                .HasColumnName("MotherNameAr");

                            b1.Property<string>("MotherNameEn")
                                .HasMaxLength(250)
                                .HasColumnType("NVARCHAR2(250)")
                                .HasColumnName("MotherNameEn");

                            b1.Property<int?>("Nationality")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("Nationality");

                            b1.Property<int?>("YearBirth")
                                .HasColumnType("NUMBER(10)")
                                .HasColumnName("YearBirth");

                            b1.HasKey("StudentId");

                            b1.HasIndex("CountryId");

                            b1.HasIndex("IdentifierTypeId");

                            b1.ToTable("AppStudent");

                            b1.HasOne("Univ.Hi_Student_Affairs.Domain.Country.Country", "Country")
                                .WithMany()
                                .HasForeignKey("CountryId");

                            b1.HasOne("Univ.Hi_Student_Affairs.Domain.Student.IdentifierType", "IdentifierType")
                                .WithMany()
                                .HasForeignKey("IdentifierTypeId");

                            b1.WithOwner()
                                .HasForeignKey("StudentId");

                            b1.Navigation("Country");

                            b1.Navigation("IdentifierType");
                        });

                    b.Navigation("StdNo")
                        .IsRequired();

                    b.Navigation("UniveInfo")
                        .IsRequired();

                    b.Navigation("studnetProfile")
                        .IsRequired();
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.TypeLic.TypeLicBranch", b =>
                {
                    b.HasOne("Univ.Hi_Student_Affairs.Domain.TypeLic.TypeLic", null)
                        .WithMany("TypeLicBranchs")
                        .HasForeignKey("TypeLicId");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.Univ.Branch", b =>
                {
                    b.HasOne("Univ.Hi_Student_Affairs.Domain.Univ.Department", null)
                        .WithMany("Branchs")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.Univ.Collage", b =>
                {
                    b.HasOne("Univ.Hi_Student_Affairs.Domain.Univ.UnivSection", null)
                        .WithMany("Collages")
                        .HasForeignKey("UnivSectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.Univ.Department", b =>
                {
                    b.HasOne("Univ.Hi_Student_Affairs.Domain.Univ.Collage", null)
                        .WithMany("Departments")
                        .HasForeignKey("CollageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.Univ.StudyPlan", b =>
                {
                    b.HasOne("Univ.Hi_Student_Affairs.Domain.Univ.Collage", null)
                        .WithMany("StudyPlans")
                        .HasForeignKey("CollageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.Univ.UnivSection", b =>
                {
                    b.HasOne("Univ.Hi_Student_Affairs.Domain.Univ.Univ", null)
                        .WithMany("UnivSections")
                        .HasForeignKey("UnivId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.StdNonSyrianUniv", b =>
                {
                    b.HasOne("Univ.Hi_Student_Affairs.Domain.Student.Student", null)
                        .WithMany("StdNonSyrianUnives")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.AuditLogAction", b =>
                {
                    b.HasOne("Volo.Abp.AuditLogging.AuditLog", null)
                        .WithMany("Actions")
                        .HasForeignKey("AuditLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.EntityChange", b =>
                {
                    b.HasOne("Volo.Abp.AuditLogging.AuditLog", null)
                        .WithMany("EntityChanges")
                        .HasForeignKey("AuditLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.EntityPropertyChange", b =>
                {
                    b.HasOne("Volo.Abp.AuditLogging.EntityChange", null)
                        .WithMany("PropertyChanges")
                        .HasForeignKey("EntityChangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityRoleClaim", b =>
                {
                    b.HasOne("Volo.Abp.Identity.IdentityRole", null)
                        .WithMany("Claims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserClaim", b =>
                {
                    b.HasOne("Volo.Abp.Identity.IdentityUser", null)
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserLogin", b =>
                {
                    b.HasOne("Volo.Abp.Identity.IdentityUser", null)
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserOrganizationUnit", b =>
                {
                    b.HasOne("Volo.Abp.Identity.OrganizationUnit", null)
                        .WithMany()
                        .HasForeignKey("OrganizationUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Volo.Abp.Identity.IdentityUser", null)
                        .WithMany("OrganizationUnits")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserRole", b =>
                {
                    b.HasOne("Volo.Abp.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Volo.Abp.Identity.IdentityUser", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUserToken", b =>
                {
                    b.HasOne("Volo.Abp.Identity.IdentityUser", null)
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.Identity.OrganizationUnit", b =>
                {
                    b.HasOne("Volo.Abp.Identity.OrganizationUnit", null)
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Volo.Abp.Identity.OrganizationUnitRole", b =>
                {
                    b.HasOne("Volo.Abp.Identity.OrganizationUnit", null)
                        .WithMany("Roles")
                        .HasForeignKey("OrganizationUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Volo.Abp.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Volo.Abp.OpenIddict.Authorizations.OpenIddictAuthorization", b =>
                {
                    b.HasOne("Volo.Abp.OpenIddict.Applications.OpenIddictApplication", null)
                        .WithMany()
                        .HasForeignKey("ApplicationId");
                });

            modelBuilder.Entity("Volo.Abp.OpenIddict.Tokens.OpenIddictToken", b =>
                {
                    b.HasOne("Volo.Abp.OpenIddict.Applications.OpenIddictApplication", null)
                        .WithMany()
                        .HasForeignKey("ApplicationId");

                    b.HasOne("Volo.Abp.OpenIddict.Authorizations.OpenIddictAuthorization", null)
                        .WithMany()
                        .HasForeignKey("AuthorizationId");
                });

            modelBuilder.Entity("Volo.Abp.TenantManagement.TenantConnectionString", b =>
                {
                    b.HasOne("Volo.Abp.TenantManagement.Tenant", null)
                        .WithMany("ConnectionStrings")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.Country.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdAbsence.StdAbsence", b =>
                {
                    b.Navigation("StdAbsenceStages");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdAffiliation.StdAffiliation", b =>
                {
                    b.Navigation("StdAffiliationStages");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdPunishment.StdPunishment", b =>
                {
                    b.Navigation("StdPunishmentStages");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdRegistration.StdRegistration", b =>
                {
                    b.Navigation("StdRegStages");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdSeqStudy.StdSeqSum", b =>
                {
                    b.Navigation("StdSeqStudies");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.StdTermination.StdTermination", b =>
                {
                    b.Navigation("StdTerminateStages");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.Student.Student", b =>
                {
                    b.Navigation("StdAbsences");

                    b.Navigation("StdAdmissions");

                    b.Navigation("StdAffiliations");

                    b.Navigation("StdCertificates");

                    b.Navigation("StdChangeCollages");

                    b.Navigation("StdInstitutes");

                    b.Navigation("StdLife");

                    b.Navigation("StdNonSyrianUnives");

                    b.Navigation("StdPunishments");

                    b.Navigation("StdRegistrations");

                    b.Navigation("StdSeqStudies");

                    b.Navigation("StdSeqSums");

                    b.Navigation("StdSymTransforms");

                    b.Navigation("StdTerminations");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.TypeLic.TypeLic", b =>
                {
                    b.Navigation("TypeLicBranchs");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.Univ.Collage", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("StudyPlans");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.Univ.Department", b =>
                {
                    b.Navigation("Branchs");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.Univ.Univ", b =>
                {
                    b.Navigation("UnivSections");
                });

            modelBuilder.Entity("Univ.Hi_Student_Affairs.Domain.Univ.UnivSection", b =>
                {
                    b.Navigation("Collages");
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.AuditLog", b =>
                {
                    b.Navigation("Actions");

                    b.Navigation("EntityChanges");
                });

            modelBuilder.Entity("Volo.Abp.AuditLogging.EntityChange", b =>
                {
                    b.Navigation("PropertyChanges");
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityRole", b =>
                {
                    b.Navigation("Claims");
                });

            modelBuilder.Entity("Volo.Abp.Identity.IdentityUser", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Logins");

                    b.Navigation("OrganizationUnits");

                    b.Navigation("Roles");

                    b.Navigation("Tokens");
                });

            modelBuilder.Entity("Volo.Abp.Identity.OrganizationUnit", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Volo.Abp.TenantManagement.Tenant", b =>
                {
                    b.Navigation("ConnectionStrings");
                });
#pragma warning restore 612, 618
        }
    }
}
